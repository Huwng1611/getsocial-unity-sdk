#if UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX || UNITY_EDITOR
/**
 * Autogenerated by Thrift Compiler ()
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace GetSocialSdk.Core 
{

  /// <summary>
  /// deprecated
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class THReceiptOld : TBase
  {
    private string _productID;
    private string _transactionID;
    private string _purchaseDate;
    private long _quantity;
    private string _originalTransactionID;
    private string _originalTransactionDate;
    private string _expiresDate;
    private long _webOrderLineItemID;
    private string _cancellationDate;

    public string ProductID
    {
      get
      {
        return _productID;
      }
      set
      {
        __isset.productID = true;
        this._productID = value;
      }
    }

    public string TransactionID
    {
      get
      {
        return _transactionID;
      }
      set
      {
        __isset.transactionID = true;
        this._transactionID = value;
      }
    }

    public string PurchaseDate
    {
      get
      {
        return _purchaseDate;
      }
      set
      {
        __isset.purchaseDate = true;
        this._purchaseDate = value;
      }
    }

    public long Quantity
    {
      get
      {
        return _quantity;
      }
      set
      {
        __isset.quantity = true;
        this._quantity = value;
      }
    }

    public string OriginalTransactionID
    {
      get
      {
        return _originalTransactionID;
      }
      set
      {
        __isset.originalTransactionID = true;
        this._originalTransactionID = value;
      }
    }

    public string OriginalTransactionDate
    {
      get
      {
        return _originalTransactionDate;
      }
      set
      {
        __isset.originalTransactionDate = true;
        this._originalTransactionDate = value;
      }
    }

    public string ExpiresDate
    {
      get
      {
        return _expiresDate;
      }
      set
      {
        __isset.expiresDate = true;
        this._expiresDate = value;
      }
    }

    public long WebOrderLineItemID
    {
      get
      {
        return _webOrderLineItemID;
      }
      set
      {
        __isset.webOrderLineItemID = true;
        this._webOrderLineItemID = value;
      }
    }

    public string CancellationDate
    {
      get
      {
        return _cancellationDate;
      }
      set
      {
        __isset.cancellationDate = true;
        this._cancellationDate = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool productID;
      public bool transactionID;
      public bool purchaseDate;
      public bool quantity;
      public bool originalTransactionID;
      public bool originalTransactionDate;
      public bool expiresDate;
      public bool webOrderLineItemID;
      public bool cancellationDate;
    }

    public THReceiptOld() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                ProductID = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                TransactionID = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                PurchaseDate = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I64) {
                Quantity = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                OriginalTransactionID = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                OriginalTransactionDate = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.String) {
                ExpiresDate = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.I64) {
                WebOrderLineItemID = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.String) {
                CancellationDate = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("THReceiptOld");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (ProductID != null && __isset.productID) {
          field.Name = "productID";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ProductID);
          oprot.WriteFieldEnd();
        }
        if (TransactionID != null && __isset.transactionID) {
          field.Name = "transactionID";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(TransactionID);
          oprot.WriteFieldEnd();
        }
        if (PurchaseDate != null && __isset.purchaseDate) {
          field.Name = "purchaseDate";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(PurchaseDate);
          oprot.WriteFieldEnd();
        }
        if (__isset.quantity) {
          field.Name = "quantity";
          field.Type = TType.I64;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Quantity);
          oprot.WriteFieldEnd();
        }
        if (OriginalTransactionID != null && __isset.originalTransactionID) {
          field.Name = "originalTransactionID";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(OriginalTransactionID);
          oprot.WriteFieldEnd();
        }
        if (OriginalTransactionDate != null && __isset.originalTransactionDate) {
          field.Name = "originalTransactionDate";
          field.Type = TType.String;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(OriginalTransactionDate);
          oprot.WriteFieldEnd();
        }
        if (ExpiresDate != null && __isset.expiresDate) {
          field.Name = "expiresDate";
          field.Type = TType.String;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ExpiresDate);
          oprot.WriteFieldEnd();
        }
        if (__isset.webOrderLineItemID) {
          field.Name = "webOrderLineItemID";
          field.Type = TType.I64;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(WebOrderLineItemID);
          oprot.WriteFieldEnd();
        }
        if (CancellationDate != null && __isset.cancellationDate) {
          field.Name = "cancellationDate";
          field.Type = TType.String;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CancellationDate);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("THReceiptOld(");
      bool __first = true;
      if (ProductID != null && __isset.productID) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ProductID: ");
        __sb.Append(ProductID);
      }
      if (TransactionID != null && __isset.transactionID) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("TransactionID: ");
        __sb.Append(TransactionID);
      }
      if (PurchaseDate != null && __isset.purchaseDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PurchaseDate: ");
        __sb.Append(PurchaseDate);
      }
      if (__isset.quantity) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Quantity: ");
        __sb.Append(Quantity);
      }
      if (OriginalTransactionID != null && __isset.originalTransactionID) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OriginalTransactionID: ");
        __sb.Append(OriginalTransactionID);
      }
      if (OriginalTransactionDate != null && __isset.originalTransactionDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OriginalTransactionDate: ");
        __sb.Append(OriginalTransactionDate);
      }
      if (ExpiresDate != null && __isset.expiresDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ExpiresDate: ");
        __sb.Append(ExpiresDate);
      }
      if (__isset.webOrderLineItemID) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("WebOrderLineItemID: ");
        __sb.Append(WebOrderLineItemID);
      }
      if (CancellationDate != null && __isset.cancellationDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CancellationDate: ");
        __sb.Append(CancellationDate);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
#endif
