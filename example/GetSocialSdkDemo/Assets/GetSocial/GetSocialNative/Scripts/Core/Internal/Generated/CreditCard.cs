#if UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX || UNITY_EDITOR
/**
 * Autogenerated by Thrift Compiler ()
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace GetSocialSdk.Core 
{

  /// <summary>
  /// e.g "$9,99"
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CreditCard : TBase
  {
    private string _brand;
    private string _last4;
    private int _expMonth;
    private int _expYear;

    public string Brand
    {
      get
      {
        return _brand;
      }
      set
      {
        __isset.brand = true;
        this._brand = value;
      }
    }

    public string Last4
    {
      get
      {
        return _last4;
      }
      set
      {
        __isset.last4 = true;
        this._last4 = value;
      }
    }

    public int ExpMonth
    {
      get
      {
        return _expMonth;
      }
      set
      {
        __isset.expMonth = true;
        this._expMonth = value;
      }
    }

    public int ExpYear
    {
      get
      {
        return _expYear;
      }
      set
      {
        __isset.expYear = true;
        this._expYear = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool brand;
      public bool last4;
      public bool expMonth;
      public bool expYear;
    }

    public CreditCard() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                Brand = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Last4 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.I32) {
                ExpMonth = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I32) {
                ExpYear = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("CreditCard");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Brand != null && __isset.brand) {
          field.Name = "brand";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Brand);
          oprot.WriteFieldEnd();
        }
        if (Last4 != null && __isset.last4) {
          field.Name = "last4";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Last4);
          oprot.WriteFieldEnd();
        }
        if (__isset.expMonth) {
          field.Name = "expMonth";
          field.Type = TType.I32;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(ExpMonth);
          oprot.WriteFieldEnd();
        }
        if (__isset.expYear) {
          field.Name = "expYear";
          field.Type = TType.I32;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(ExpYear);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("CreditCard(");
      bool __first = true;
      if (Brand != null && __isset.brand) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Brand: ");
        __sb.Append(Brand);
      }
      if (Last4 != null && __isset.last4) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Last4: ");
        __sb.Append(Last4);
      }
      if (__isset.expMonth) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ExpMonth: ");
        __sb.Append(ExpMonth);
      }
      if (__isset.expYear) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ExpYear: ");
        __sb.Append(ExpYear);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
#endif
